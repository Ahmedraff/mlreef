
# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' keep-alive;
}

gzip_types text/plain text/css application/javascript application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent"';
access_log on;
error_log /dev/stderr;

# HTTP 1.1 support
proxy_http_version 1.1;
proxy_buffering off;
proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
proxy_set_header X-Forwarded-Path $request_uri;
proxy_set_header Proxy "";

client_max_body_size 10M;

upstream server-frontend {
  server frontend:3000;
}
upstream server-mlreef-backend {
  server backend:8080;
}
upstream server-gitlab {
  server gitlab:10080;
}

server {
	listen 80 default_server;
	access_log /var/log/nginx/access.log vhost;
  location / {
    proxy_pass http://server-frontend/;
  }
  location /api/v1/ {
    # Preflighted requests
    if ($request_method = OPTIONS ) {
      add_header "Access-Control-Allow-Origin"  *;
      add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
      add_header "Access-Control-Allow-Headers" "PRIVATE-TOKEN, Origin, X-Requested-With, Content-Type, Accept";
      return 200;
    }
    proxy_pass http://server-mlreef-backend/api/v1/;
    add_header       X-Upstream      $upstream_addr;
  }
  location /api/v4/ {
    # Preflighted requests
    if ($request_method = OPTIONS ) {
      add_header "Access-Control-Allow-Origin"  *;
      add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
      add_header "Access-Control-Allow-Headers" "PRIVATE-TOKEN, Origin, X-Requested-With, Content-Type, Accept";
      return 200;
    }
    proxy_pass http://server-gitlab/api/v4/;
    add_header       X-Upstream      $upstream_addr;
  }

}

