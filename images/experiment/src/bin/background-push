#!/bin/sh
#only continues if it is a model
#if [ "$2" != "true" ]
#   then
#        echo "Skip background-push"
#        exit 0
#fi
#sentinelhub.config --show
echo " ISALGORITM:  $2"
#extraction of output-path parameter and type of dataprocessor from PIPELINE_STRING mlreef-905
FILE="experiment.json"
STAT="$1/$FILE"
echo "STATISTIC_FILE is $STAT "
echo "EPF_PIPELINE_SECRET is $EPF_PIPELINE_SECRET"
echo "EPF_PIPELINE_URL is $EPF_PIPELINE_URL"

# send information to Backend's EPF API endpoint for "update" or "finish"
request_epf_endpoint_update() {
  url="$EPF_PIPELINE_URL/update"
  echo "Background push to URL: $url"
  curl --include --request PUT "$url" \
    --header "EPF-BOT-TOKEN: $EPF_PIPELINE_SECRET" \
    --header "Content-Type: application/json" \
    --data @"$STAT"
  echo ""
}

i=0
while [ "$i" -lt 150 ]; do # run 150 iterations max
  echo "------------------------------------------------------------"
  if [ ! -f "$STAT" ]; then
    echo "MLReef-EPF statistic service #$i: $STAT does not exist yet, waiting for experiment to start.."
    sleep 60
  else
    echo "MLReef-EPF statistic service #$i:"
    cat $STAT
    request_epf_endpoint_update
    sleep 15
  fi
  i=$(($i + 1))
done
# 15 seconds times 150 ==> 37.5 minutes 
