#!/bin/sh
# change to the repository root folder via the scripts location
 cd "$(dirname "$0")"/..
. bin/includes/detect-os
. bin/includes/ci-environment
. bin/includes/docker-registry-login
########################################
set -x    # output all commands
set -e    # exit on immediately on every error
set -u    # error on usage of undefined variables
########################################


# change directory to the frontend folder
cd web

# ensure that there is a package json present
if [ -e package.json ]; then
    echo "found package.json"
else
    echo "could not find package.json â€¦ exiting"
    exit 1
fi

docker build --tag "$GATEWAY_IMAGE_PATH" -f Dockerfile .  \
 --build-arg CI_COMMIT_REF_SLUG="$CI_COMMIT_REF_SLUG"     \
 --build-arg CI_PIPELINE_ID="$CI_PIPELINE_ID"             \


# Get Test coverage report from build image
docker create -ti --name dummy "$GATEWAY_IMAGE_PATH" bash
docker cp dummy:/usr/share/coverage coverage
docker rm -f dummy
