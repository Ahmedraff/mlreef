# original source: https://github.com/sameersbn/docker-gitlab/blob/master/docker-compose.yml
version: '3.3'

# please research https://docs.docker.com/compose/environment-variables/ for howto setup your environment
services:

  nginx-proxy:
    image: nginx
    container_name: nginx-proxy
    restart: always
    depends_on:
      - gitlab
      - backend
      - frontend
    ports:
      - "80:80"
    volumes:
      - "./src/resources/nginx_proxy.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - mlreef-docker-network


  frontend:
    image: registry.gitlab.com/mlreef/frontend:develop
    container_name: frontend
    restart: always
    depends_on:
      - gitlab
      - backend
    ports:
      - "3000:3000"
  #    environment:
  #      - REACT_APP_API_GATEWAY=http://localhost
    networks:
      - mlreef-docker-network


  backend:
    container_name: backend
    image: registry.gitlab.com/mlreef/backend:develop
    restart: always
    depends_on:
      - gitlab
      - mlreef-postgres
      - redis
    ports:
      - "8080:8080"
      - "20080:8080"
    env_file: local.env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - GITLAB_ROOT_URL=http://gitlab:80
      - DB_HOST=mlreef-postgres
      - DB_PORT=5432
      - DB_USER=mlreef
      - DB_PASS=password                                             # secret, use ENV var
      - DB_NAME=mlreef_backend
      - REDIS_HOST=redis
      - STARTUP_DELAY=30
    networks:
      - mlreef-docker-network


  gitlab:
    container_name: gitlab
    restart: always
    image: sameersbn/gitlab:12.4.0
    depends_on:
      - redis
      - postgresql
    ports:
      - "10080:80"
      - "10022:22"
    volumes:
      - gitlab-data:/home/git/data:Z                                 # this line gets rewritten by the CI/CD pipeline
      #CI_REMOVE- /data/gitlab:/home/git/data:Z                      # this line gets activated by the CI/CD pipeline
    env_file: local.env                                              # do not remove. contains secrets
    environment:
      - DEBUG=false

      - DB_ADAPTER=postgresql
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_USER=gitlab
      - DB_PASS=password                                             #secret, use ENV var
      - DB_NAME=gitlabhq_production

      - REDIS_HOST=redis
      - REDIS_PORT=6379

      - TZ=Austria/Vienna
      - GITLAB_TIMEZONE=Vienna
      - GITLAB_HTTPS=false
      - SSL_SELF_SIGNED=false

      - GITLAB_HOST=gitlab                                           # this line gets rewritten by the CI/CD pipeline
      - GITLAB_PORT=80                                               # this line gets rewritten by the CI/CD pipeline
      - GITLAB_SSH_PORT=10022
      - GITLAB_RELATIVE_URL_ROOT=

      - GITLAB_ROOT_PASSWORD=password
      - GITLAB_ROOT_EMAIL=
    networks:
      - mlreef-docker-network


  postgresql:
    container_name: postgresql
    restart: always
    image: sameersbn/postgresql:10-2
    volumes:
      - postgresql-data:/var/lib/postgresql:Z                        # this line gets rewritten by the CI/CD pipeline
      #CI_REMOVE- /data/postgres:/var/lib/postgresql:Z               # this line gets activated by the CI/CD pipeline
      - "./src/bin/setup-gitlab.sh:/usr/local/bin/setup-gitlab.sh"
    ports: ["5432:5432"]
    env_file: local.env
    environment:
      - DB_USER=gitlab
      - DB_PASS=password                                             # secret, use ENV var
      - DB_NAME=gitlabhq_production
      - DB_EXTENSION=pg_trgm
    networks:
      - mlreef-docker-network


  mlreef-postgres:
    container_name: mlreef-postgres
    restart: always
    image: sameersbn/postgresql:10-2
    ports:
      - "6000:5432"
    volumes:
      - mlreefsql-data:/var/lib/postgresql:Z                         # this line gets rewritten by the CI/CD pipeline
      #CI_REMOVE- /data/mlreefdb:/var/lib/postgresql:Z               # this line gets activated by the CI/CD pipeline
    environment:
      - DB_USER=mlreef
      - DB_PASS=password                                             # secret, use ENV var
      - DB_NAME=mlreef_backend
      - DB_EXTENSION=pg_trgm
    networks:
      - mlreef-docker-network


  redis:
    container_name: redis
    restart: always
    image: sameersbn/redis:4.0.9-2
    ports: ["6379:6379"]
    networks:
      - mlreef-docker-network


  gitlab-runner-dispatcher:
    container_name: gitlab-runner-dispatcher
    image: gitlab/gitlab-runner:alpine
    volumes:
      #CI_REMOVE- /data/gitlab-runner-config:/etc/gitlab-runner/:Z   # this line gets activated by the CI/CD pipeline
      - /var/run/docker.sock:/var/run/docker.sock                    # needed for "docker in docker" to work
    networks:
      - mlreef-docker-network


volumes:
  sock:
  postgresql-data:                                                   # this line gets removed by the CI/CD pipeline
  mlreefsql-data:                                                    # this line gets removed by the CI/CD pipeline
  gitlab-data:                                                       # this line gets removed by the CI/CD pipeline
  gitlab-runner-config:                                              # this line gets removed by the CI/CD pipeline


networks:
  mlreef-docker-network:
