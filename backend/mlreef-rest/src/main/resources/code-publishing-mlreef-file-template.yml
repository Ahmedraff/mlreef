#################################################################################
# This is the MLReef configuration file.                                        #
# It contains the current configuration of  your data pipeline, model training, #
# or visualisation as well as the specific configurations.                      #
# Please refer to the documentation for information on how to edit this file    #
#################################################################################

variables:
  # mlreef.com/api/v1/code-projects/:id/publish/finish
  EPF_PUBLISH_URL: #{#EPF_PUBLISH_URL}
  EPF_PUBLISH_SECRET: #{#EPF_PUBLISH_SECRET}
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DAEMON_OPTIONS: "--insecure-registry=${CI_REGISTRY}"

services:
  - name: docker:19.03.12-dind
    entrypoint: [ "sh", "-c", "dockerd-entrypoint.sh $DOCKER_DAEMON_OPTIONS" ]

job:
  image: docker:19.03.12
  only:
    - master
  #tags:
  #  - local-docker
  when: on_success
  before_script:
    - apk add --update curl || true
  script:
    - echo "$CI_REGISTRY"
    # Build the docker image in the repositories root directory
    - docker build --tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" -f Dockerfile .
    # login to MLReef's docker image registry
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" --username="$CI_REGISTRY_USER" --password-stdin
    # Upload the newly built docker image to MLReef's docker image registry
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    # Update processor information
    - curl --include --verbose --request PUT "$EPF_PUBLISH_URL/publish/rescan-processor-source" --header "EPF-BOT-TOKEN:$EPF_PUBLISH_SECRET"
