logging:
  level:
    root: INFO
    com.mlreef.rest: DEBUG
    org.springframework.security: WARN
    org.springframework.orm: WARN
    org.hibernate: WARN
    org.springframework.boot.autoconfigure: ERROR

mlreef:
  gitlab:
    root-url: ${GITLAB_ROOT_URL:http://localhost:10080}
    admin-user-token: ${GITLAB_ADMIN_TOKEN:local-api-token}     # GITLAB_ADMIN_TOKEN needs to correspond with local.env
  epf:
    # When running in docker on a single machine, the EPF will access
    # the Backend via the docker internal hostname backend:8080
    # and Gitlab via the docker hostname gitlab:10080
    backend-url: ${EPF_BACKEND_URL:http://localhost:8080}
    gitlab-url: ${EPF_GITLAB_URL:http://gitlab:10080}


spring:
  devtools:
    add-properties: true
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:7000}/${DB_NAME:mlreef_backend_dev}
    username: ${DB_USER:mlreef}
    password: ${DB_PASSWORD:password}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp.use_jdbc_metadata_defaults: false
    hibernate:
      ddl-auto: create-drop # USE for dev only
  flyway:
    enabled: false # USE for dev only
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:7379}
