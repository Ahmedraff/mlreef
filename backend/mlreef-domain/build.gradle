plugins {
//    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.jetbrains.kotlin.jvm'
    id 'kotlin-spring'
    id 'kotlin-jpa'
    id 'kotlin-allopen'
    id 'antlr'
}

group = 'com.mlreef'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'javax.persistence:javax.persistence-api'
    implementation 'org.hibernate:hibernate-core' //, version: '5.3.12.Final'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.10"

    implementation 'org.springframework.data:spring-data-jpa'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    // parsing python files with ANTLR
    antlr 'org.antlr:antlr4:4.7.2'
    implementation 'org.antlr:antlr4-runtime:4.7.2'

    // testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    def jupiter = "5.6.2"
    def mockkVersion = "1.9.3"
    testImplementation "org.junit.jupiter:junit-jupiter:$jupiter"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit' //by both name and group
    }
    testImplementation "io.mockk:mockk:${mockkVersion}"

}


jar {
    enabled = true
}

test {
    systemProperty 'junit.jupiter.extensions.autodetection.enabled', 'true'
    useJUnitPlatform()
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}
sourceSets.main.java.srcDir new File("build/generated-src/")

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor"]
    outputDirectory = file("build/generated-src/com/mlreef/antlr")
}

compileKotlin.dependsOn generateGrammarSource
