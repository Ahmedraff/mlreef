compile backend:
  stage: stage1
  image: java:8
  only:
    changes:
      - backend/**/*
      - bin/ci-compile-backend
      - .gitlab-ci-build.yml
  services:
    - docker:19.03.0-dind
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - backend/.gradle/wrapper
      - backend/.gradle/caches
  script: bin/ci-compile-backend
  artifacts:
    paths:
      - backend/mlreef-rest/build/asciidoc/html5/rest-api.html
      - backend/mlreef-rest/build/libs/*
      - backend/mlreef-rest/build/dependency/*
      - backend/mlreef-rest/build/reports/jacoco/test
      - backend/mlreef-rest/build/reports/tests/
    reports:
      junit: backend/mlreef-rest/build/test-results/test/**/TEST-*.xml

build backend:
  extends: [".except-docu-branches"]
  stage: stage2
  only:
    changes:
      - backend/**/*
      - bin/ci-build-backend
      - .gitlab-ci-build.yml
  image: docker:19.03.1
  services:
    - docker:19.03.0-dind
  before_script:
    - export TAG="${CI_COMMIT_REF_SLUG}"
    - if [ $CI_COMMIT_REF_SLUG = "master" ]; then export TAG="latest";  fi          # follow docker naming conventions
    - export GATEWAY_IMAGE_PATH=$CI_REGISTRY_IMAGE/gateway:$TAG
    - export BACKEND_IMAGE_PATH=$CI_REGISTRY_IMAGE/backend:$TAG
    - export     EPF_IMAGE_PATH=$CI_REGISTRY_IMAGE/epf:$TAG
  script: |
    bin/ci-build-backend
    docker push "$BACKEND_IMAGE_PATH"


build frontend:
  extends: [".except-docu-branches"]
  stage: stage1
  only:
    changes:
      - web/**/*
      - bin/ci-build-frontend
      - .gitlab-ci-build.yml
  # This docker version should correspond with the on docker version in the EC2 deployment
  image: docker:19.03.5                                     # https://hub.docker.com/_/docker/
  services:
    - docker:dind
  before_script:
    - export TAG="${CI_COMMIT_REF_SLUG}"
    - if [ $CI_COMMIT_REF_SLUG = "master" ]; then export TAG="latest";  fi          # follow docker naming conventions
    - export GATEWAY_IMAGE_PATH=$CI_REGISTRY_IMAGE/gateway:$TAG
    - export BACKEND_IMAGE_PATH=$CI_REGISTRY_IMAGE/backend:$TAG
    - export     EPF_IMAGE_PATH=$CI_REGISTRY_IMAGE/epf:$TAG
  script: |
    bin/ci-build-frontend
    docker push "$GATEWAY_IMAGE_PATH"
  artifacts:
    expire_in: 3 days
    paths:
      - web/coverage


build epf:
  extends: [".except-docu-branches"]
  stage: stage1
  only:
    changes:
      - epf/**/*
      - bin/ci-build-epf
      - .gitlab-ci-build.yml
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - export TAG="${CI_COMMIT_REF_SLUG}"
    - if [ $CI_COMMIT_REF_SLUG = "master" ]; then export TAG="latest";  fi          # follow docker naming conventions
    - export GATEWAY_IMAGE_PATH=$CI_REGISTRY_IMAGE/gateway:$TAG
    - export BACKEND_IMAGE_PATH=$CI_REGISTRY_IMAGE/backend:$TAG
    - export     EPF_IMAGE_PATH=$CI_REGISTRY_IMAGE/epf:$TAG
  script: |
    bin/ci-build-epf
    docker push "$EPF_IMAGE_PATH"
