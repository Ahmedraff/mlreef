################################################################################
# This is the MLReef configuration file.                                       #
# It contains the current configuration of your model-experiment (training)    #
# as well as the temporary configurations executed data pipelines              #
################################################################################

# This is the docker image your model training will be executed in
image: registry.gitlab.com/mlreef/epf:%EPF_TAG%

variables:
  # Change pip's cache directory to be inside the project directory since we can only cache local items.
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"


# The before_script handles everything git related and sets up the automatic committing
before_script:
  - git remote set-url origin https://${GIT_PUSH_USER}:${GIT_PUSH_TOKEN}@%GITLAB_ROOT_URL%/%GITLAB_GROUP%/%GITLAB_PROJECT%.git
  - git config --global user.email "%CONF_EMAIL%"
  - git config --global user.name "%CONF_NAME%"
  - git checkout %SOURCE_BRANCH%
  - export GITLAB_API_TOKEN="${GIT_PUSH_TOKEN}"
  - export CI_COMMIT_REF_SLUG="${CI_COMMIT_REF_SLUG}"
  - export CI_PROJECT_ID="${CI_PROJECT_ID}"
  - export TARGET_BRANCH="%TARGET_BRANCH%"
  - background-push &

data-pipeline:
  script:
    - git checkout -b %TARGET_BRANCH%
    - echo ${CI_JOB_ID} >> data_pipeline.info
%PIPELINE_STRING%
    - git add .
    - git status
    - git commit -m "Add pipeline results [skip ci]"
    - git push --set-upstream origin %TARGET_BRANCH%
    - git push
