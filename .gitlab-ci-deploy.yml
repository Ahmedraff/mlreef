deploy:
  extends: [".except-docu-branches"]
  stage: deploy
  when: delayed
  start_in: 3 minutes                                                 # This delay exists to give new environments enough time to boot
  image: registry.gitlab.com/systemkern/s5:latest
  variables:
    SSH_KEYFILE:          "src/terraform/development.pem"
    DEPLOY_SCRIPT:        "src/bin/deploy.sh"
    DOCKER_COMPOSE:       "docker-compose.yml"
    DOCKER_ENV:           "local.env"
  script:
    - URL=$(cat $INSTANCE_INFO)
    - echo "URL  is $URL" # debug output
    - if [ "$URL" = "" ]; then exit 1; fi
    - echo "CI_COMMIT_REF_SLUG       is $CI_COMMIT_REF_SLUG"
    - echo "DOCKER_ENV               is $DOCKER_ENV"
    - if [ "$DOCKER_ENV" = "" ];     then exit 1; fi
    - echo "DOCKER_COMPOSE           is $DOCKER_COMPOSE"
    - if [ "$DOCKER_COMPOSE" = "" ]; then exit 1; fi
    - chmod +x src/bin/*

    - export TAG="${CI_COMMIT_REF_SLUG}"
    - if [ $CI_COMMIT_REF_SLUG == "master" ]; then TAG="latest";  fi  # follow docker naming conventions

    # If a frontend image exists for the current branch, rewrite the docker compose file
    # change the frontend docker image from "latest" to the current branch's $CI_COMMIT_REF_SLUG
    # As can be seen in .gitlab-ci-build.yml there is no image with tag "master", because it will be named "latest"
    # 1113714 is the id of the "frontend's" sub-repository id
    - DOCKER_BRANCH_IMAGE_URL=https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/registry/repositories/1113714/tags/$TAG/
    - echo "DOCKER_BRANCH_IMAGE_URL is $DOCKER_BRANCH_IMAGE_URL"
    - CURL_RESPONSE=$(curl --silent --header "PRIVATE-TOKEN$COLON $GITLAB_COM_API_TOKEN" --output /dev/null -w ''%{http_code}'' $DOCKER_BRANCH_IMAGE_URL)
    - if [ "$CURL_RESPONSE" = "200" ]; then sed -i "s/frontend:latest/frontend:$TAG/" $DOCKER_COMPOSE; fi

    # rewrite docker compose file:
    # Activate (uncomment) specific lines in the docker-compose file
    - sed -i "s~#CI_ACTIVATE~~"                                       $DOCKER_COMPOSE
    # remove tagged lines in the docker-compos file
    - sed -i "/#CI_DELETE_LINE/d"                                     $DOCKER_COMPOSE
    - cat $DOCKER_COMPOSE

    ### Prepare ssh connection
    - URL=$(cat $INSTANCE_INFO)
    - echo $URL                                                       # debug output
    - chmod 400 $SSH_KEYFILE                                          # prepare private key file
    - chmod +x src/bin/*
    - while ! ssh-keyscan -H "$URL" >>~/.ssh/known_hosts; do echo "Trying again..."; sleep 5; done
    ### upload modified docker-compose to ec2 instance
    - ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}"     "mkdir -p /home/ubuntu/bin"
    - ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}"     "mkdir -p /home/ubuntu/src/bin"
    - ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}"     "mkdir -p /home/ubuntu/src/resources"
    - scp -i $SSH_KEYFILE -o 'AddKeysToAgent yes' $DOCKER_COMPOSE     ubuntu@${URL}:/home/ubuntu/$DOCKER_COMPOSE
    - scp -i $SSH_KEYFILE -o 'AddKeysToAgent yes' $DEPLOY_SCRIPT      ubuntu@${URL}:/home/ubuntu/$DEPLOY_SCRIPT
    - scp -i $SSH_KEYFILE -o 'AddKeysToAgent yes' $NGINX_CONFIG       ubuntu@${URL}:/home/ubuntu/$NGINX_CONFIG
    - echo "Wait for the machine to actually install docker"
    - echo "Starting deploy script"
    - echo "----------------------------------------"
    - ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}" "
        echo "${CI_REGISTRY_PASSWORD}" | sudo docker login ${CI_REGISTRY} --username=${CI_REGISTRY_USER} --password-stdin
      "

    ### Execute the actual deployment ###
    - ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}" "
      sudo docker images;
      sudo docker ps;
      sudo $DEPLOY_SCRIPT
      --instance $URL
      --key $AWS_ACCESS_KEY_ID
      --secret $AWS_SECRET_ACCESS_KEY
      --docker-environment-file $DOCKER_ENV
      --gitlab-admin-token $GITLAB_ADMIN_TOKEN
      --gitlab-secrets-key-base secret1111111111122222222222333333333334444444444555555555566666666661234
      --gitlab-opt-key-base secret1111111111122222222222333333333334444444444555555555566666666661234
      --gitlab-db-key-base secret1111111111122222222222333333333334444444444555555555566666666661234
      "
