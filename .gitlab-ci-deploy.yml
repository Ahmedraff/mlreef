.deploy-base:
  extends: [".except-docu-branches"]
  stage: deploy
  image: registry.gitlab.com/systemkern/s5:latest
  variables:
    GITLAB_PORT: 10080
  before_script:
    - echo "CI_COMMIT_REF_SLUG  is $CI_COMMIT_REF_SLUG"
    - echo "FRONTEND_TAG        is $FRONTEND_TAG"
    - echo "BACKEND_TAG         is $BACKEND_TAG"
    - echo "FRONTEND_IMAGE_NAME is $FRONTEND_IMAGE_NAME"
    - echo "BACKEND_IMAGE_NAME  is $BACKEND_IMAGE_NAME"
    - echo "FRONTEND_IMAGE_PATH is $FRONTEND_IMAGE_PATH"
    - echo "BACKEND_IMAGE_PATH  is $BACKEND_IMAGE_PATH"
    - echo "DOCKER_ENV          is $DOCKER_ENV"
    - echo "DOCKER_COMPOSE      is $DOCKER_COMPOSE"

    - URL=$(cat $INSTANCE_INFO)
    - echo $URL                                            # debug output
    - chmod 400 $SSH_KEYFILE                               # prepare private key file
    - chmod +x src/bin/*
    # rewrite docker compose file
    # change the frontend docker image from develop branch to current branch
    - sed -i "s/$FRONTEND_IMAGE_NAME:develop/$FRONTEND_IMAGE_NAME:$FRONTEND_TAG/" $DOCKER_COMPOSE
    # change the frontend docker image from develop branch to current branch
    - sed -i "s/$BACKEND_IMAGE_NAME:develop/$BACKEND_IMAGE_NAME:$BACKEND_TAG/"    $DOCKER_COMPOSE
    # Activate (uncomment) specific lines in the docker-compose file
    - sed -i "s~#CI_ACTIVATE~~"                                                   $DOCKER_COMPOSE
    # remove tagged lines in the docker-compos file
    - sed -i "/#CI_DELETE_LINE/d"                                                 $DOCKER_COMPOSE
    - cat $DOCKER_COMPOSE
    - ssh-keyscan -H "$URL" >>~/.ssh/known_hosts
    # upload modified docker-compose to ec2 instance
    - ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}"       "mkdir -p /home/ubuntu/bin"
    - ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}"       "mkdir -p /home/ubuntu/src/bin"
    - ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}"       "mkdir -p /home/ubuntu/src/resources"
    - scp -i $SSH_KEYFILE -o 'AddKeysToAgent yes' $DOCKER_COMPOSE       ubuntu@${URL}:/home/ubuntu/$DOCKER_COMPOSE
    - scp -i $SSH_KEYFILE -o 'AddKeysToAgent yes' $DEPLOY_SCRIPT        ubuntu@${URL}:/home/ubuntu/$DEPLOY_SCRIPT
    - scp -i $SSH_KEYFILE -o 'AddKeysToAgent yes' $NGINX_CONFIG         ubuntu@${URL}:/home/ubuntu/$NGINX_CONFIG
    - echo "Starting deploy script"
    - echo "----------------------------------------"
    - ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}" "
      sudo docker login ${DOCKER_REGISTRY} -u \"${DOCKER_USER}\" -p \"${DOCKER_PASSWORD}\"
      "

deploy develop branch:
  extends: .deploy-base
  only:
    refs: [develop, master]
  #  Development deployment has been temporarily changed to the old style
#  script: ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}" "
#    export DOCKER_ENV="test.env"                                     &&
#    echo GITLAB_ADMIN_TOKEN=$GITLAB_ADMIN_TOKEN >> $DOCKER_ENV       &&
#    sudo docker-compose pull                                         &&
#    sudo docker-compose up --detach                                  &&
#    sudo docker system prune --force
#    "
  script: ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}" "
    sudo $DEPLOY_SCRIPT
    --instance $URL
    --port $GITLAB_PORT
    --key $AWS_ACCESS_KEY_ID
    --secret $AWS_SECRET_ACCESS_KEY
    --gitlab-admin-token $GITLAB_ADMIN_TOKEN
    --gitlab-secrets-key-base secret1111111111122222222222333333333334444444444555555555566666666661234
    --gitlab-opt-key-base secret1111111111122222222222333333333334444444444555555555566666666661234
    --gitlab-db-key-base secret1111111111122222222222333333333334444444444555555555566666666661234
    --runtime nvidia
    "

deploy feature branch:
  extends: [".deploy-base", ".feature-branches-only"]
  except:
    refs:
      - develop
      - master
  script: ssh -i $SSH_KEYFILE -o 'AddKeysToAgent yes' ubuntu@"${URL}" "
    sudo $DEPLOY_SCRIPT
    --instance $URL
    --port $GITLAB_PORT
    --key $AWS_ACCESS_KEY_ID
    --secret $AWS_SECRET_ACCESS_KEY
    --docker-environment-file $DOCKER_ENV
    --gitlab-admin-token $GITLAB_ADMIN_TOKEN
    --gitlab-secrets-key-base secret1111111111122222222222333333333334444444444555555555566666666661234
    --gitlab-opt-key-base secret1111111111122222222222333333333334444444444555555555566666666661234
    --gitlab-db-key-base secret1111111111122222222222333333333334444444444555555555566666666661234
    --runtime docker
    "
