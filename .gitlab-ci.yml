stages:
  - test
  - build
  - undeploy

test:
  image: python:3.7
  stage: test
  script: 
    - cd src/tests
    - python3 -m pip install --upgrade pip
    - pip3 install -r requirements.txt
    - python3 -m unittest -v im_transformations_tests.Test
    - echo "Test dataOps successful"


build-deploy:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "${CI_REGISTRY_PASSWORD}" | docker login ${CI_REGISTRY} --username=${CI_REGISTRY_USER} --password-stdin
    - export TAG="${CI_COMMIT_REF_SLUG}"
    - if [ $CI_COMMIT_REF_SLUG == "master" ]; then TAG="latest";  fi          # follow docker naming conventions
    - docker build --quiet --tag "$CI_REGISTRY_IMAGE:$TAG" -f Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:$TAG"
  environment:
    name: $CI_COMMIT_REF_SLUG
    url: $CI_PROJECT_URL/container_registry#$CI_COMMIT_REF_SLUG   # This is the url of the bucket we saved before
    on_stop: undeploy



undeploy:
  when: manual
  stage: undeploy
  except:
    refs:
      - master
  image: registry.gitlab.com/systemkern/s5:latest
  variables:
    GIT_STRATEGY: none
    COLON: ":" # workaround to preserve the yaml structure (because of the ":")
  before_script:
    # Require Gitlab API token or this job
    - if [ "$GITLAB_COM_API_TOKEN" = "" ]; then exit 0; fi
  script:
    # Get the registry repository ID from the Gitlab API
    - CONTAINER_REPO_ID=$(curl --silent --header "PRIVATE-TOKEN$COLON $GITLAB_COM_API_TOKEN"
      https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/registry/repositories/
      | jq -r .[0].id
      )
    - curl --request DELETE --header "PRIVATE-TOKEN$COLON $GITLAB_COM_API_TOKEN"
      https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/registry/repositories/$CONTAINER_REPO_ID/tags/$CI_COMMIT_REF_SLUG
  environment:
    name: $CI_COMMIT_REF_SLUG
    action: stop
