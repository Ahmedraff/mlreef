import React from 'react';
import { bool, func, shape, string } from 'prop-types';
import { toastr } from 'react-redux-toastr';
import DataPipelineApi from 'apis/DataPipelineApi.ts';

const dataPipelineApi = new DataPipelineApi();

const DataInstanteDeleteModal = (props) => {
  const {
    isModalVisible,
    setIsVisible,
    instanceToDelete,
    callBack,
  } = props;

  const handlePositiveAction = () => dataPipelineApi
    .delete(instanceToDelete.backendProjectId, instanceToDelete.pipelineBackendId)
    .then(() => {
      callBack();
      toastr.success('Success', 'The data instace was deleted');
    })
    .catch(() => toastr.error('Error', 'Something went wrong'))
    .finally(() => setIsVisible(false));

  if (!isModalVisible) {
    return null;
  }

  return (
    <div className="modal dark-cover modal-danger modal-lg show">
      <div className="modal-cover" />
      <div className="modal-container">
        <div className="modal-container-close">
          <button
            type="button"
            label="close"
            className="btn btn-hidden fa fa-times"
            onClick={() => setIsVisible(false)}
          />
        </div>
        <div className="modal-header">
          Delete:
          {' '}
          <span>{instanceToDelete.descTitle}</span>
        </div>
        <div className="modal-content">
          <br />
          <p style={{ textAlign: 'center' }}>
            Are you sure you want to delete your dataset:
            {' '}
            <b>
              {instanceToDelete.descTitle}
            </b>
          </p>
          <p style={{ textAlign: 'center' }}>
            You will loose all files generated by the pipeline
          </p>
          <div className="d-flex modal-action" style={{ justifyContent: 'space-between', marginTop: '3rem' }}>
            <button
              type="button"
              onClick={() => setIsVisible(false)}
              className="btn btn-outline-dark btn-label-sm"
            >
              Cancel
            </button>
            <button
              type="button"
              className="btn btn-danger"
              onClick={handlePositiveAction}
            >
              Delete
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

DataInstanteDeleteModal.propTypes = {
  isModalVisible: bool,
  setIsVisible: func.isRequired,
  instanceToDelete: shape({
    backendProjectId: string.isRequired,
    pipelineBackendId: string.isRequired,
    descTitle: string.isRequired,
  }).isRequired,
  callBack: func.isRequired,
};

DataInstanteDeleteModal.defaultProps = {
  isModalVisible: false,
};

export default DataInstanteDeleteModal;
